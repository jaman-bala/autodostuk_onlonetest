"""up: migrate

Revision ID: dae543650c55
Revises: cd44273e61b3
Create Date: 2025-01-21 20:48:25.624125

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "dae543650c55"
down_revision: Union[str, None] = "cd44273e61b3"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "reports",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("ticket_id", sa.UUID(), nullable=True),
        sa.Column("theme_id", sa.UUID(), nullable=True),
        sa.Column("points", sa.Integer(), nullable=True),
        sa.Column("date_from", sa.DateTime(timezone=True), nullable=True),
        sa.Column("date_end", sa.DateTime(timezone=True), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(["theme_id"], ["themes.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["ticket_id"], ["tickets.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_constraint("answers_question_id_fkey", "answers", type_="foreignkey")
    op.create_foreign_key(None, "answers", "questions", ["question_id"], ["id"], ondelete="CASCADE")
    op.drop_column("answers", "updated_date")
    op.drop_column("answers", "created_date")
    op.drop_column("groups", "updated_date")
    op.drop_column("groups", "created_date")
    op.drop_constraint("payments_user_id_fkey", "payments", type_="foreignkey")
    op.create_foreign_key(None, "payments", "users", ["user_id"], ["id"], ondelete="CASCADE")
    op.drop_column("payments", "updated_date")
    op.drop_column("payments", "created_date")
    op.drop_constraint("questions_theme_id_fkey", "questions", type_="foreignkey")
    op.drop_constraint("questions_ticket_id_fkey", "questions", type_="foreignkey")
    op.create_foreign_key(None, "questions", "tickets", ["ticket_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(None, "questions", "themes", ["theme_id"], ["id"], ondelete="CASCADE")
    op.add_column("themes", sa.Column("title_ru", sa.String(length=599), nullable=True))
    op.add_column("themes", sa.Column("title_kg", sa.String(length=599), nullable=True))
    op.drop_column("themes", "updated_date")
    op.drop_column("themes", "title")
    op.drop_column("themes", "created_date")
    op.drop_column("tickets", "updated_date")
    op.drop_column("tickets", "created_date")
    op.drop_column("totals", "updated_date")
    op.drop_column("totals", "created_date")
    op.drop_constraint("users_group_id_fkey", "users", type_="foreignkey")
    op.create_foreign_key(None, "users", "groups", ["group_id"], ["id"], ondelete="CASCADE")
    op.drop_column("users", "updated_date")
    op.drop_column("users", "created_date")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "created_date",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "updated_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(None, "users", type_="foreignkey")
    op.create_foreign_key("users_group_id_fkey", "users", "groups", ["group_id"], ["id"])
    op.add_column(
        "totals",
        sa.Column(
            "created_date",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "totals",
        sa.Column(
            "updated_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "tickets",
        sa.Column(
            "created_date",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "tickets",
        sa.Column(
            "updated_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "themes",
        sa.Column(
            "created_date",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "themes", sa.Column("title", sa.VARCHAR(length=599), autoincrement=False, nullable=True)
    )
    op.add_column(
        "themes",
        sa.Column(
            "updated_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
    )
    op.drop_column("themes", "title_kg")
    op.drop_column("themes", "title_ru")
    op.drop_constraint(None, "questions", type_="foreignkey")
    op.drop_constraint(None, "questions", type_="foreignkey")
    op.create_foreign_key("questions_ticket_id_fkey", "questions", "tickets", ["ticket_id"], ["id"])
    op.create_foreign_key("questions_theme_id_fkey", "questions", "themes", ["theme_id"], ["id"])
    op.add_column(
        "payments",
        sa.Column(
            "created_date",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "payments",
        sa.Column(
            "updated_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(None, "payments", type_="foreignkey")
    op.create_foreign_key("payments_user_id_fkey", "payments", "users", ["user_id"], ["id"])
    op.add_column(
        "groups",
        sa.Column(
            "created_date",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "groups",
        sa.Column(
            "updated_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "answers",
        sa.Column(
            "created_date",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "answers",
        sa.Column(
            "updated_date", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False
        ),
    )
    op.drop_constraint(None, "answers", type_="foreignkey")
    op.create_foreign_key(
        "answers_question_id_fkey", "answers", "questions", ["question_id"], ["id"]
    )
    op.drop_table("reports")
    # ### end Alembic commands ###
